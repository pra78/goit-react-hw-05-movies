{"version":3,"file":"static/js/961.6a5e72be.chunk.js","mappings":"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","sources":["api/api.jsx","components/BackLink/BackLink.jsx","pages/Cast/Cast.jsx","pages/MovieDetails/MovieDetails.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst refs = {\n    API_URL: \"https://api.themoviedb.org/3\",\n    KEY: \"63021acb907201a1471dfb5721049566\",\n};\n\nconst axiosInst = axios.create({\n  baseURL: refs.API_URL,\n  params: {\n    api_key: refs.KEY,\n  },\n});\n\n// https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const api = {\n    getTrendingMovies: async () => {\n        try {\n            const res = await axiosInst.get('/trending/movie/day');\n            const data = res.data.results;\n            return data;\n        } catch (error) {\n            console.log(error);\n            // location.replace('../404.html');\n        }\n    },\n    getMovieDetails: async (movieId) => {\n        try {\n            const res = await axiosInst.get(`/movie/${movieId}`, {params: {language: \"en-US\"}});\n            const data = res.data;\n            return data;\n        } catch (error) {\n            console.log(error);\n            // location.replace('../404.html');\n        }\n    },\n    getCredits: async (movieId) => {\n        try {\n            const res = await axiosInst.get(`/movie/${movieId}/credits`, {params: {language: \"en-US\"}});\n            const data = res.data;\n            return data;\n        } catch (error) {\n            console.log(error);\n            // location.replace('../404.html');\n        }\n    }\n}","import { StyledLink } from \"components/Layout/Layout.styled\";\nimport { HiArrowLeft } from \"react-icons/hi\";\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"16\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { api } from \"api/api\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\n\nconst Cast = () => {\n    const location = useLocation();\n    const movieId = useParams().movieId ?? '';\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        if (location.pathname !== `/movies/${movieId}/cast`) {\n            return;\n        }\n        const getMovieCast = async () => {\n            const response = await api.getCredits(movieId);\n            setCast(response.cast.map(actor => ({\n                id: actor.id,\n                profilePic: `https://image.tmdb.org/t/p/w500/${actor.profile_path}`,\n                name: actor.name,\n                character: actor.character,\n            })));\n        }\n        \n        getMovieCast();\n        \n    }, [movieId, location]); \n\n    return (\n        <>\n            <p>Cast</p>\n            <ul>\n                {cast.map(actor => {\n                    return (\n                        <li key={actor.id}>\n                            {actor.profilePic}\n                            {actor.name}\n                            {actor.character}\n                        </li>\n                    );\n                })}\n            </ul>\n        </>\n    );\n}\n\nexport default Cast;","import { api } from \"api/api\";\nimport { BackLink } from \"components/BackLink/BackLink\";\nimport Cast from \"pages/Cast/Cast\";\nimport Reviews from \"pages/Reviews/Reviews\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLocation, useParams } from \"react-router-dom\";\n\nconst MovieDetails = () => {\n    const location = useLocation();\n    const movieId = useParams().movieId ?? '';\n    const backLinkHref = location.state?.from ?? \"/\";\n    const [poster, setPoster] = useState('');\n    const [title, setTitle] = useState('');\n    const [rating, setRating] = useState(0);\n    const [overview, setOverview] = useState('');\n    const [genres, setGenres] = useState([]);\n\n    useEffect(() => {\n        const getMovieDetails = async () => {\n            const response = await api.getMovieDetails(movieId);\n            setPoster(`https://image.tmdb.org/t/p/w500/${response.poster_path}`);\n            setTitle(response.original_title);\n            setRating(Math.round(response.vote_average * 10));\n            setOverview(response.overview);\n            setGenres(response.genres.map(genre => (genre.name)));\n        }\n        \n        getMovieDetails();\n        \n    }, [movieId]); \n\n    return (\n        <>\n            <BackLink to={backLinkHref}>Go back</BackLink>\n            <img src={poster} alt={title} />\n            <h3>{title}</h3>\n            <p>User score: {rating}%</p>\n            <h4>Overview</h4>\n            <p>{overview}</p>\n            <h5>Genres</h5>\n            <p>{genres.map(genre => String(genre) + \" \")}</p>\n            <hr/>\n            <p>Additional information</p>\n            <ul>\n                <li>\n                    <Link to={`cast`} state={{ from: location }}><Cast/></Link>\n                </li>\n                <li>\n                    <Link to={`reviews`} state={{ from: location }}><Reviews/></Link>\n                </li>\n            </ul>\n            <hr />\n        </>\n    );\n}\n\nexport default MovieDetails;","const Reviews = () => {\n    return (\n        <div>Reviews</div>\n    );\n}\n\nexport default Reviews;"],"names":["refs","axiosInst","axios","baseURL","params","api_key","api","getTrendingMovies","get","res","data","results","console","log","getMovieDetails","movieId","language","getCredits","BackLink","to","children","size","location","useLocation","useParams","useState","cast","setCast","useEffect","pathname","getMovieCast","response","map","actor","id","profilePic","profile_path","name","character","backLinkHref","state","from","poster","setPoster","title","setTitle","rating","setRating","overview","setOverview","genres","setGenres","poster_path","original_title","Math","round","vote_average","genre","src","alt","String"],"sourceRoot":""}