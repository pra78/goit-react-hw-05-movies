{"version":3,"file":"static/js/186.88ca9b4f.chunk.js","mappings":"qMAEMA,EACO,+BADPA,EAEG,mCAGHC,E,OAAYC,EAAAA,OAAa,CAC7BC,QAASH,EACTI,OAAQ,CACNC,QAASL,KAIAM,EAAM,CACfC,kBAAkB,WAAD,wBAAE,+GAEON,EAAUO,IAAI,uBAFrB,cAELC,EAFK,OAGLC,EAAOD,EAAIC,KAAKC,QAHX,kBAIJD,GAJI,gCAMXE,QAAQC,IAAR,MANW,yDAAF,kDAAC,GAUlBC,gBAAgB,WAAD,wBAAE,WAAOC,GAAP,kGAESd,EAAUO,IAAI,gBAAiB,CAACJ,OAAQ,CAACY,MAAOD,EAAaE,SAAU,QAASC,KAAM,EAAG,eAAiB,KAFnH,cAEHT,EAFG,OAGHC,EAAOD,EAAIC,KAAKC,QAHb,kBAIFD,GAJE,gCAMTE,QAAQC,IAAR,MANS,yDAAF,mDAAC,GAUhBM,gBAAgB,WAAD,wBAAE,WAAOC,GAAP,kGAESnB,EAAUO,IAAV,iBAAwBY,GAAW,CAAChB,OAAQ,CAACa,SAAU,WAFhE,cAEHR,EAFG,OAGHC,EAAOD,EAAIC,KAHR,kBAIFA,GAJE,gCAMTE,QAAQC,IAAR,MANS,yDAAF,mDAAC,GAUhBQ,WAAW,WAAD,wBAAE,WAAOD,GAAP,kGAEcnB,EAAUO,IAAV,iBAAwBY,EAAxB,YAA2C,CAAChB,OAAQ,CAACa,SAAU,WAF7E,cAEER,EAFF,OAGEC,EAAOD,EAAIC,KAHb,kBAIGA,GAJH,gCAMJE,QAAQC,IAAR,MANI,yDAAF,mDAAC,GAUXS,WAAW,WAAD,wBAAE,WAAOF,GAAP,kGAEcnB,EAAUO,IAAV,iBAAwBY,EAAxB,YAA2C,CAAChB,OAAQ,CAACa,SAAU,QAASC,KAAM,KAF5F,cAEET,EAFF,OAGEC,EAAOD,EAAIC,KAHb,kBAIGA,GAJH,gCAMJE,QAAQC,IAAR,MANI,yDAAF,mDAAC,G,yGCrBf,UA7BgB,WAAO,IAAD,EACZU,GAAWC,EAAAA,EAAAA,MACXJ,EAAO,WAAGK,EAAAA,EAAAA,MAAYL,eAAf,QAA0B,GACvC,GAA8BM,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,mCAAG,oGACGxB,EAAAA,EAAAA,WAAec,GADlB,OACdW,EADc,OAEpBH,EAAWG,EAASpB,QAAQqB,KAAI,kBAA8B,CAAEC,GAAhC,EAAGA,GAAiCC,OAApC,EAAOA,OAAqCC,QAA5C,EAAeA,QAAf,KAFZ,2CAAH,qDAKrBL,GAEH,GAAE,CAACV,EAASG,KAGT,wBACwB,IAAnBI,EAAQS,QAAgB,oEAAmDT,EAAQK,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACnG,OACI,2BACI,qCAAaD,MACb,uBAAIC,MAFCF,EAKhB,KAGZ,C","sources":["api/api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst refs = {\n    API_URL: \"https://api.themoviedb.org/3\",\n    KEY: \"63021acb907201a1471dfb5721049566\",\n};\n\nconst axiosInst = axios.create({\n  baseURL: refs.API_URL,\n  params: {\n    api_key: refs.KEY,\n  },\n});\n\nexport const api = {\n    getTrendingMovies: async () => {\n        try {\n            const res = await axiosInst.get('/trending/movie/day');\n            const data = res.data.results;\n            return data;\n        } catch (error) {\n            console.log(error);\n            // location.replace('../404.html');\n        }\n    },\n    getSaughtMovies: async (searchQuery) => {\n        try {\n            const res = await axiosInst.get('/search/movie', {params: {query: searchQuery, language: \"en-US\", page: 1, \"include_adult\": false, }});\n            const data = res.data.results;\n            return data;\n        } catch (error) {\n            console.log(error);\n            // location.replace('../404.html');\n        }\n    },\n    getMovieDetails: async (movieId) => {\n        try {\n            const res = await axiosInst.get(`/movie/${movieId}`, {params: {language: \"en-US\"}});\n            const data = res.data;\n            return data;\n        } catch (error) {\n            console.log(error);\n            // location.replace('../404.html');\n        }\n    },\n    getCredits: async (movieId) => {\n        try {\n            const res = await axiosInst.get(`/movie/${movieId}/credits`, {params: {language: \"en-US\"}});\n            const data = res.data;\n            return data;\n        } catch (error) {\n            console.log(error);\n            // location.replace('../404.html');\n        }\n    },\n    getReviews: async (movieId) => {\n        try {\n            const res = await axiosInst.get(`/movie/${movieId}/reviews`, {params: {language: \"en-US\" ,page: 1,}});\n            const data = res.data;\n            return data;\n        } catch (error) {\n            console.log(error);\n            // location.replace('../404.html');\n        }\n    }\n}","import { api } from \"api/api\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\n\n\nconst Reviews = () => {\n    const location = useLocation();\n    const movieId = useParams().movieId ?? '';\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        const getMovieReviews = async () => {\n            const response = await api.getReviews(movieId);\n            setReviews(response.results.map(({ id, author, content }) => ({ id, author, content, })));\n        }\n        \n        getMovieReviews();\n        \n    }, [movieId, location]);\n\n    return (\n        <ul>\n            {reviews.length === 0 ? (<p>We don't have any reviews for this movie</p>) : reviews.map(({ id, author, content }) => {\n                return (\n                    <li key={id}>\n                        <h3>Author: {author}</h3>\n                        <p>{content}</p>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n}\n\nexport default Reviews;"],"names":["refs","axiosInst","axios","baseURL","params","api_key","api","getTrendingMovies","get","res","data","results","console","log","getSaughtMovies","searchQuery","query","language","page","getMovieDetails","movieId","getCredits","getReviews","location","useLocation","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","response","map","id","author","content","length"],"sourceRoot":""}