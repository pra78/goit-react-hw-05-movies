{"version":3,"file":"static/js/736.83d20b6b.chunk.js","mappings":"qMAEMA,EACO,+BADPA,EAEG,mCAGHC,E,OAAYC,EAAAA,OAAa,CAC7BC,QAASH,EACTI,OAAQ,CACNC,QAASL,KAIAM,EAAM,CACfC,kBAAkB,WAAD,wBAAE,+GAEON,EAAUO,IAAI,uBAFrB,cAELC,EAFK,OAGLC,EAAOD,EAAIC,KAAKC,QAHX,kBAIJD,GAJI,gCAMXE,QAAQC,IAAR,MANW,yDAAF,kDAAC,GAUlBC,gBAAgB,WAAD,wBAAE,WAAOC,GAAP,kGAESd,EAAUO,IAAI,gBAAiB,CAACJ,OAAQ,CAACY,MAAOD,EAAaE,SAAU,QAASC,KAAM,EAAG,eAAiB,KAFnH,cAEHT,EAFG,OAGHC,EAAOD,EAAIC,KAAKC,QAHb,kBAIFD,GAJE,gCAMTE,QAAQC,IAAR,MANS,yDAAF,mDAAC,GAUhBM,gBAAgB,WAAD,wBAAE,WAAOC,GAAP,kGAESnB,EAAUO,IAAV,iBAAwBY,GAAW,CAAChB,OAAQ,CAACa,SAAU,WAFhE,cAEHR,EAFG,OAGHC,EAAOD,EAAIC,KAHR,kBAIFA,GAJE,gCAMTE,QAAQC,IAAR,MANS,yDAAF,mDAAC,GAUhBQ,WAAW,WAAD,wBAAE,WAAOD,GAAP,kGAEcnB,EAAUO,IAAV,iBAAwBY,EAAxB,YAA2C,CAAChB,OAAQ,CAACa,SAAU,WAF7E,cAEER,EAFF,OAGEC,EAAOD,EAAIC,KAHb,kBAIGA,GAJH,gCAMJE,QAAQC,IAAR,MANI,yDAAF,mDAAC,GAUXS,WAAW,WAAD,wBAAE,WAAOF,GAAP,kGAEcnB,EAAUO,IAAV,iBAAwBY,EAAxB,YAA2C,CAAChB,OAAQ,CAACa,SAAU,QAASC,KAAM,KAF5F,cAEET,EAFF,OAGEC,EAAOD,EAAIC,KAHb,kBAIGA,GAJH,gCAMJE,QAAQC,IAAR,MANI,yDAAF,mDAAC,G,iJCrDFU,E,OAAYC,EAAAA,IAAH,2C,SCsCtB,EAnCa,WAAO,IAAD,EACTC,GAAWC,EAAAA,EAAAA,MACXN,EAAO,WAAGO,EAAAA,EAAAA,MAAYP,eAAf,QAA0B,GACvC,GAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,oGACM1B,EAAAA,EAAAA,WAAec,GADrB,OACXa,EADW,OAEjBH,EAAQG,EAASJ,KAAKK,KAAI,SAAAC,GAAK,MAAK,CAChCC,GAAID,EAAMC,GACVC,WAAW,mCAAD,OAAqCF,EAAMG,cACrDC,KAAMJ,EAAMI,KACZC,UAAWL,EAAMK,UAJU,KAFd,2CAAH,qDAUlBR,GAEH,GAAE,CAACZ,EAASK,KAGT,wBACKI,EAAKK,KAAI,SAAAC,GACN,OACI,2BACI,SAACZ,EAAD,CAAWkB,IAAKN,EAAME,WAAYK,IAAKP,EAAMI,QAC7C,uBAAIJ,EAAMI,QACV,uCAAeJ,EAAMK,eAHhBL,EAAMC,GAMtB,KAGZ,C","sources":["api/api.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst refs = {\n    API_URL: \"https://api.themoviedb.org/3\",\n    KEY: \"63021acb907201a1471dfb5721049566\",\n};\n\nconst axiosInst = axios.create({\n  baseURL: refs.API_URL,\n  params: {\n    api_key: refs.KEY,\n  },\n});\n\nexport const api = {\n    getTrendingMovies: async () => {\n        try {\n            const res = await axiosInst.get('/trending/movie/day');\n            const data = res.data.results;\n            return data;\n        } catch (error) {\n            console.log(error);\n            // location.replace('../404.html');\n        }\n    },\n    getSaughtMovies: async (searchQuery) => {\n        try {\n            const res = await axiosInst.get('/search/movie', {params: {query: searchQuery, language: \"en-US\", page: 1, \"include_adult\": false, }});\n            const data = res.data.results;\n            return data;\n        } catch (error) {\n            console.log(error);\n            // location.replace('../404.html');\n        }\n    },\n    getMovieDetails: async (movieId) => {\n        try {\n            const res = await axiosInst.get(`/movie/${movieId}`, {params: {language: \"en-US\"}});\n            const data = res.data;\n            return data;\n        } catch (error) {\n            console.log(error);\n            // location.replace('../404.html');\n        }\n    },\n    getCredits: async (movieId) => {\n        try {\n            const res = await axiosInst.get(`/movie/${movieId}/credits`, {params: {language: \"en-US\"}});\n            const data = res.data;\n            return data;\n        } catch (error) {\n            console.log(error);\n            // location.replace('../404.html');\n        }\n    },\n    getReviews: async (movieId) => {\n        try {\n            const res = await axiosInst.get(`/movie/${movieId}/reviews`, {params: {language: \"en-US\" ,page: 1,}});\n            const data = res.data;\n            return data;\n        } catch (error) {\n            console.log(error);\n            // location.replace('../404.html');\n        }\n    }\n}","import styled from \"@emotion/styled\";\n\nexport const StyledImg = styled.img`\n    width: 120px;\n`;","import { api } from \"api/api\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { StyledImg } from \"./Cast.styled\";\n\nconst Cast = () => {\n    const location = useLocation();\n    const movieId = useParams().movieId ?? '';\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        const getMovieCast = async () => {\n            const response = await api.getCredits(movieId);\n            setCast(response.cast.map(actor => ({\n                id: actor.id,\n                profilePic: `https://image.tmdb.org/t/p/w500/${actor.profile_path}`,\n                name: actor.name,\n                character: actor.character,\n            })));\n        }\n        \n        getMovieCast();\n        \n    }, [movieId, location]); \n\n    return (\n        <ul>\n            {cast.map(actor => {\n                return (\n                    <li key={actor.id}>\n                        <StyledImg src={actor.profilePic} alt={actor.name} />\n                        <p>{actor.name}</p>\n                        <p>Character: {actor.character}</p>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n}\n\nexport default Cast;"],"names":["refs","axiosInst","axios","baseURL","params","api_key","api","getTrendingMovies","get","res","data","results","console","log","getSaughtMovies","searchQuery","query","language","page","getMovieDetails","movieId","getCredits","getReviews","StyledImg","styled","location","useLocation","useParams","useState","cast","setCast","useEffect","getMovieCast","response","map","actor","id","profilePic","profile_path","name","character","src","alt"],"sourceRoot":""}